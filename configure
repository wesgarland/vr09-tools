#! /bin/sh -f
#
# Configure script for GPSEE program/library vr09-tools. This is not autoconf, 
# and it  requires bash somewhere on your PATH. It may also work with a real 
# SVR4 Korn shell, although that is not a supported configuration at this time.
#
# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1/GPL 2.0/LGPL 2.1
#
# The contents of this file are subject to the Mozilla Public License Version
# 1.1 (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
# The Initial Developer of the Original Code is PageMail, Inc.
#
# Portions created by the Initial Developer are 
# Copyright (c) 2007-2010, PageMail, Inc. All Rights Reserved.
#
# Contributor(s):
# 
# Alternatively, the contents of this file may be used under the terms of
# either of the GNU General Public License Version 2 or later (the "GPL"),
# or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
#
# ***** END LICENSE BLOCK ***** 
#
# @file         configure
#               A build configuration automation script for vr09-tools.
#
# @author	Wes Garland, wes@page.ca
# @date		Aug 2014
#

PROGRAM_LABEL="VR09-Tools"

gpsee_dir="`dirname $0`"
if [ ! "$BASH_VERSION" ]; then
  if [ ! -x "/bin/bash" ]; then
    . ${gpsee_dir}/configure.incl
    bash="`locate bash`"
  else
    bash=/bin/bash
  fi

  if [ "$bash" ]; then
    BASH_VERSION=dontrecurse $bash $0 $*
    exit $?
  fi
fi

if [ "$BASH_VERSION" = "dontrecurse" ] || [ ! "$BASH_VERSION" ]; then
  echo "Sorry, you need a bash shell to run this program"
  exit 1
fi

argv_zero="$0"
configure_cmd="$0 $*"

isFunc="typeset -f"
listFuncs="typeset -F"

[ ! "$USER" ] && [ "$LOGNAME" ] && USER="$LOGNAME"

_printf_fmt_opt_help()
{
  printf "  %30.30s %s\n" "$1                                                         " "$2"
}

_echo_fmt_opt_help()
{
  echo -- "  $1\t$2"
}
_help()
{
cat <<EOF
configure - Configuration tool for ${PROGRAM_LABEL}

Usage: $argv_zero [options]

Note: This is not autoconf; it simply automates specifying common options in
      local_config.mk files with a more familiar user interface.

Example:
  $argv_zero --with-gpsee-config=/usr/local/bin/gpsee-config

Options:
EOF

  if printf "" 2>/dev/null; then 
    fmt=_printf_fmt_opt_help
  else
    fmt=_echo_fmt_opt_help
  fi

  $fmt "--help" "Display this help"

  $listFuncs | grep -v ' _' | sed -e 's/^.* //'  | while read func
  do
    opt="`echo \"$func\" | sed -e 's/_/-/g'`"
    echo "$func" | egrep -v '^enable|disable|help' >/dev/null && opt="$opt=value"
    $fmt "--$opt" "`$func help`"
  done

  echo
  exit 2
}

prefix()
{
  [ "$1" = "help" ] && echo "Specify location of GPSEE install" && return
  echo "GPSEE_PREFIX_DIR=$1" >&5
}

#with_build()
#{
#  [ "$1" = "help" ] && echo "Specify build type (DEBUG or RELEASE)" && return
#  echo "BUILD=$1" >&5
#}

with_program_dir()
{
  [ "$1" = "help" ] && echo "Specify directory for binaries (default: /usr/bin)" && return
  echo "PROGRAM_DIR=$1" >&5
}

with_gpsee_config()
{
  [ "$1" = "help" ] && echo "Specify gpsee-config location" && return
  GPSEE_CONFIG="$1"
}

with_gnu_make()
{
  [ "$1" = "help" ] && echo "Specify location of GNU Make (3.81 or better) executable" && return
  make="$1"
}

#with_gpsee_src()
#{
#  [ "$1" = "help" ] && echo "Specify which GPSEE source directory to read from" && return
#  echo "GPSEE_SRC_DIR=$1" >&5
#}

with_system_gsr()
{
  [ "$1" = "help" ] && echo "Specify location of /usr/bin/gsr symlink" && return
  echo "GSR=$1" >&5
}

# main

case "$1" in 
  "--help"|"-h"|"help")
    _help
    ;;
esac

. ${gpsee_dir}/configure.incl

# first pass: configure configure
originalArgs="$*"
while [ "$1" ]
do
  if expr "$1" : '--with-gnu-make=.*' >/dev/null ; then
    make="`echo \"$1\" | sed 's/.*=//'`"
    echo MAKE IS $make
  fi
  shift
done

[ "$GSR" ] || GSR="`locate gsr`"
[ "$make" ] || make="`locate make gmake`"

set -- $originalArgs

fd=5
confdirs="."
for dir in $confdirs
do
  file="$gpsee_dir/$dir/local_config.mk"
  [ -f "$file" ] && head -1 "$file" | grep -v "Generated" >/dev/null && mv "$dir/local_config.mk" "$dir/local_config.mk.old"
  echo "# Generated `date` by $USER on `hostname`" > "$file"
  echo "# Configuration command: $0 $originalArgs" >> "$file"
  echo "# " >> "$file" 
  cat "$file.sample" >> "$file"
  eval "exec $fd>>\"$file\""
  echo "" >&$fd
  echo "# Changes made by $configure_cmd" >&$fd
  fd=`expr $fd + 1`
done

while [ "$1" ]
do
  if echo "$1" | grep '^--' >/dev/null; then
    # --enable-option, --disable-option, or --option=value
    func="`echo \"$1\" | sed -e 's/^--//' -e 's/-/_/g' -e 's/=.*//'`"
    arg="`echo \"$1\" | grep = | sed -e 's/[^=]*=//'`" 
    if ! $isFunc "$func" >/dev/null; then
      if echo "$func" | grep '^enable' >/dev/null; then
        func="`echo \"$func\" | sed 's/^enable/disable/'`"
        arg="enable"
      else
        if echo "$func" | grep '^disable' >/dev/null; then
          func="`echo \"$func\" | sed 's/^disable/enable/'`"
          arg="disable"
        fi
      fi
    fi

    if ! $isFunc "$func" >/dev/null; then
      errout "$1: invalid option"
      exit 1
    else
#      echo "$arg" | grep '^~/' >/dev/null && arg="`echo \"$arg\" | sed 's/^~\//$(HOME)\//'`"
      $func "`uglob \"$arg\"`"
    fi
  else
    errout "$1: invalid option"
    exit 3
  fi
  shift
done

if [ ! "$GPSEE_CONFIG" ]; then
  a="`locate gsr`"
  if [ -h "$a" ]; then
    a="`readlink $a`"
  fi
  if [ "$a" ]; then
    a="`dirname $a`"
    if [ -f "$a/gpsee-config" ]; then
      GPSEE_CONFIG="$a/gpsee-config"
    fi
  fi
fi

if [ ! "$GPSEE_CONFIG" ]; then
  GPSEE_CONFIG="`locate gpsee-config`" && echo "GPSEE_CONFIG=$GPSEE_CONFIG" >&5
else
  echo "GPSEE_CONFIG=${GPSEE_CONFIG}" >&5
fi

if [ ! "$GPSEE_CONFIG" ]; then
  errout "Could not locate gpsee-config"
  exit 5
fi

echo
echo "Done. You may now install ${PROGRAM_LABEL}."
echo
